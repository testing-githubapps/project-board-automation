name: Github Project Board Assignment
on:
  workflow_dispatch:
  issues:
    types:
      - labeled
jobs:
  #publish-to-project:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/add-to-project@v0.4.0
  #      with:
  #       project-url: ${{ secrets.PROJECTS_BOARD_URL }}
  #        github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #        labeled: wontfix, invalid, duplicate
  #        label-operator: NOT

  set-custom-field:
    #needs: publish-to-project
    runs-on: ubuntu-latest
    steps:
    - name: Grabbing Project Data
      env: 
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        ORGANIZATION: testing-githubapps
        PROJECT_NUMBER: 1
      run: |
        gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectV2(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'DATE_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Date posted") | .id' project_data.json) >> $GITHUB_ENV
          echo 'CLIENT_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Client") | .id' project_data.json) >> $GITHUB_ENV
          echo 'CLIENT_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Client") | .options[] | select(.name=="Liatrio - Internal") |.id' project_data.json) >> $GITHUB_ENV
    - name: Set fields
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh api graphql -f query='
            mutation (
              $project: ID!
              $item: ID!
              $status_field: ID!
              $status_value: String!
              $date_field: ID!
              $date_value: Date!
            ) {
              set_status: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $status_field
                value: { 
                  singleSelectOptionId: $status_value
                  }
              }) {
                projectV2Item {
                  id
                  }
              }
              set_date_posted: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $date_field
                value: { 
                  date: $date_value
                }
              }) {
                projectV2Item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f item=14 -f status_field=$CLIENT_FIELD_ID -f status_value='Liatrio - Internal' -f date_field=$DATE_FIELD_ID -f date_value=$DATE --silent